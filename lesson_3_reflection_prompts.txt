When would you want to use a remote repository rather than keeping all your work local?
  Remote repository is used when I am using multiple systems, and in gitHub.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Because I dont want my local repository updated with the changes and features that I dont need.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks are a clone of repository withing github. Clones is a process of copying a remote repository content to local repository. Branch is creating a different set of feature under a different lable or branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
	Having the last known state of the remote branch will help us to understand & track the changes happened in remote brnach, once I fetch I will be able to use the commits to validate and merge with remote branch.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	We can collaborate using other version control systems, but having Git / GitHub it makes it so easier and all the content available as long as I am online, th web interface of github makes it easier to find informationa and collaborate. Without gitHub, it would requrie both team members co-locate or get on a call or use the version control systme to understand and merge changes.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	When we have a bug in the code that we want fix, its good to use a branch rather than updating code in a stable master version. Bennifit is a clear isolation of any instability that might creep in a stable master build.